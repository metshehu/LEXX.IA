"""
Django settings for MetiSearch project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

STATIC_UPLOAD_DIR = os.path.join(BASE_DIR, "static/uploads")
BASE_LAWS = os.path.join(BASE_DIR, "static/BaseLaws")
CONTRACT_TEMPALTES = os.path.join(BASE_DIR, "static/ContractTemplates")


GENERATED_FILES = os.path.join(BASE_DIR, "static/Generated_File")

INTERNAL_ACT = os.path.join(BASE_DIR, "static/Internal_Act")

USER_INFO = False
LEAGLEREVIEW = os.path.join(BASE_DIR, "static/LeaglReview")
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-12)qzr@+vd$+cn_f20!yud2&)f^ghpau9n%87tar0s1lletp6-"
# SECURITY WARNING: don't run with debug turned on in production!

# Fetch the OpenAI API key from the environment

OPENAI_KEY = os.environ.get("OPENAI_API_KEY")  # Define media settings
print(OPENAI_KEY)
if not OPENAI_KEY:
    raise ValueError("OpenAI API key is not set. Please add it to your environment variables.")

FILE = {}
MEDIA_URL = "/media/"  # URL for accessing uploaded files
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Directory to store static files
STATIC_URL = "/static/"
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),  # Your static files directory
]
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")  # Collected static files


# Application definition

INSTALLED_APPS = [
    "corsheaders",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework_simplejwt",
    "Questions",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",  # ðŸ‘ˆ MUST BE FIRST
    "django.middleware.common.CommonMiddleware",  # ðŸ‘ˆ keep just after
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]
CORS_ALLOWED_ORIGINS = [ "http://localhost:8080","http://192.168.1.18:8080"]# your frontend dev server ]
CORS_ALLOW_CREDENTIALS = True


ROOT_URLCONF = "MetiSearch.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "MetiSearch.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
